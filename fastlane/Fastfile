opt_out_usage
default_platform(:ios)

platform :ios do
  desc "Build and Sign app"
  lane :build_and_sign do

  setup_ci

  match(
    type: "appstore",
    readonly: is_ci,
  )

  update_code_signing_settings(
    use_automatic_signing: false,
    path: ENV["XCODE_PROJ"],
    profile_name: ENV["sigh_"+ENV["APP_IDENTIFIER"] +"_appstore_profile-name"],
    code_sign_identity: "iPhone Distribution",
    bundle_identifier: ENV["APP_IDENTIFIER"]
  )

  build_number = getCustomBundleVersion()
  add_badge(shield: ENV["BADGE_TITLE"]+ "-" + ENV['GITHUB_RUN_NUMBER'] + "-167cff", no_badge: true) unless ENV["SKIP_ADD_BADGE"]

  build_app(
    scheme: ENV["APP_SCHEME"],
    output_directory: "build/",
    output_name: "CovidCertificate.ipa",
    archive_path: "build/CovidCertificate.xcarchive",
    buildlog_path: "build/build.log",
    xcargs: "BUILD_NUMBER=#{build_number}"
  )
  end

  def getCustomBundleVersion()
    datestring_now = DateTime.now.strftime('%y%m%d.%H%M')
    bundle_version = "#{datestring_now}.#{ENV['GITHUB_RUN_NUMBER']}#{ENV['BUILD_NUMBER_POSTFIX']}"
    return bundle_version
  end

   lane :test do
    multi_scan(
      scheme: "Debug",
      try_count: 3,
      parallel_testrun_count: 1,
      device: "iPhone 11 Pro"
    )
  end

  lane :resignbrz do
    resign(
      ipa: "./CovidCertificateWallet.ipa",
      signing_identity: "iPhone Distribution: ...",
      bundle_id: "at.gv.brz.wallet",
      bundle_version: "1",
      short_version: "1.0.0",
      provisioning_profile: {
        "at.gv.brz.wallet" => "./ProvisioningProfile.mobileprovision"
      }
    )
  end
end
